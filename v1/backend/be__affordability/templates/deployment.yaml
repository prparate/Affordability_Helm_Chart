apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  namespace: {{ .Release.Namespace }}
spec:
  {{- with .Values }}
  replicas: {{ .replicasCount }}
  strategy:
    {{- with .updateStrategy }}
    type: {{ .type }}
    rollingUpdate:
      maxUnavailable: {{ .maxUnavailable }}
      maxSurge: {{ .maxSurge }}
    {{- end }}
  selector:
    matchLabels:
      app: {{ .appName }}
  template:
    metadata:
      labels:
        app: {{ .appName }}
  {{- end }}
    spec:
      initContainers:
        - name: pem-to-keystore
          env:
            - name: keystore_pkcs12
              value: /var/run/secrets/java.io/keystores/keystore.pkcs12
            - name: keystore_jks
              value: /var/run/secrets/java.io/keystores/keystore.jks
            - name: password
              value: changeit
          command: [ '/bin/bash' ]
          args: [ '-c', "openssl pkcs12 -export -inkey $PF_TLS_KEY_FILE -in $PF_TLS_CRT_FILE -out $keystore_pkcs12 -password pass:$password 
                && keytool -importkeystore -noprompt -srckeystore $keystore_pkcs12 -srcstoretype pkcs12 -destkeystore $keystore_jks -storepass $password -srcstorepass $password" ]
          volumeMounts:
            - name: keystore-volume
              mountPath: /var/run/secrets/java.io/keystores
      containers:
        - env:
          {{- include "SET_ENV_SECRETS" . | indent 12 }}
          {{- include "CERT_TLS_FILE_NAMES" . | indent 12 }}
          {{- include "EXPORT_ENV_CONFIGS" . | indent 12 }}
          {{- include "SET_POSTGRESDB_SECRET" . | indent 12 }}
          {{- include "EXPORT_SERVICES_HOSTNAMES" . | indent 12 }}

          name: {{ .Values.appName }}
          image: {{ template "SET_DOCKER_IMAGE" . }}
          imagePullPolicy: {{ .Values.image.policy }}
          ports:
            - containerPort:  {{ .Values.containers.containerPort }}
              protocol: {{ .Values.containers.protocol | quote }}
          volumeMounts:
            - mountPath: "/app/cert"
              name: app-tls
              readOnly: true
      volumes:
      - name: app-tls
        secret:
          secretName: {{ template "CERT_TLS_SECRET_NAME" . }}
      - name: keystore-volume
        emptyDir: { }