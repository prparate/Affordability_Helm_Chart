apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  namespace: {{ .Release.Namespace }}
spec:
  {{- with .Values }}
  replicas: {{ .replicasCount }}
  strategy:
    {{- with .updateStrategy }}
    type: {{ .type }}
    rollingUpdate:
      maxUnavailable: {{ .maxUnavailable }}
      maxSurge: {{ .maxSurge }}
    {{- end }}  
  selector:
    matchLabels:
      app: {{ .appName }}
  template:
    metadata:
      labels:
        app: {{ .appName }}
  {{- end }}
    spec:
      containers:
        - env:
          {{- include "CERT_TLS_FILE_NAMES" . | indent 12 }}
          {{- include "SET_CLE_INTEGRATION_SECRETS" . | indent 12 }}
          {{- include "SET_SCYLLADB_SECRET" . | indent 12 }}
          {{- include "EXPORT_SCYLLADB_CONFIGMAP" . | indent 12 }}
          {{- include "EXPORT_ENV_CONFIGS" . | indent 12 }}
          {{- include "EXPORT_SERVICES_HOSTNAMES" . | indent 12 }}
          name: {{ .Values.appName }}
          image: {{ template "SET_DOCKER_IMAGE" . }}
          {{- with .Values }}
          imagePullPolicy: {{ .image.policy }}
          ports:
            - containerPort:  {{ .containers.containerPort }}
              protocol: {{ .containers.protocol | quote }}
          volumeMounts:
            - mountPath: "/app/cert"
              name: app-tls
              readOnly: true
#          readinessProbe:
#            exec:
#                command: ["./be__grpc_health_probe"]
#            livenessProbe:
#            exec:
#              command: ["./be__grpc_health_probe"]
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
      - name: app-tls
        secret:
          secretName: {{ template "CERT_TLS_SECRET_NAME" . }}