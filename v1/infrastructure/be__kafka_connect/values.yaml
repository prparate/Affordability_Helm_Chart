replicasCount: 2

containers:
  protocol: TCP
  containerPort: 8083

service:
  type: ClusterIP
  port: 80
  targetPort: 8083

image:
  registry: premfinaukcontainerregistry.azurecr.io/docker/backend
  repository: be-kafka-connect
  tag: 0.0.2
  policy: Always

updateStrategy:
  type: RollingUpdate
  maxUnavailable: 10%
  maxSurge: 1

configMaps:
  ingress:
    host: kafka-connect.internal.dev.premfina.com
    tls:
      secret: internal-secret-tls
  env:
    CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
    CONNECT_REST_PORT: 8083
    CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
    CONNECT_REST_ADVERTISED_HOST_NAME: be-kafka-connect.internal.dev.premfina.com
    CONNECT_GROUP_ID: compose-connect-group
    CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
    CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
    CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
    CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
    CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://be-schema-registry-svc
    CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
    CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://be-schema-registry-svc
    CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
    CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "2"
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "2"
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "2"
    CONNECT_PLUGIN_PATH: '/usr/share/java'
